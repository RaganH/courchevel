// Generated by SpatialOS codegen. DO NOT EDIT!
// source: ragan.WealthData in improbable/player/wealth.schema.

namespace Ragan
{

public partial struct WealthData : global::System.IEquatable<WealthData>
{
  /// <summary>
  /// Field current = 1.
  /// </summary>
  public int current;

  public WealthData(int current)
  {
    this.current = current;
  }

  public WealthData DeepCopy()
  {
    var _result = new WealthData();
    _result.current = current;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is WealthData && Equals((WealthData) _obj);
  }

  public static bool operator==(WealthData a, WealthData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(WealthData a, WealthData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(WealthData _obj)
  {
    return
        current == _obj.current;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + current.GetHashCode();
    return _result;
  }
}

public static class WealthData_Internal
{
  public static global::Schema.Ragan.WealthData Serialize(WealthData _data)
  {
    var _proto = new global::Schema.Ragan.WealthData();
    _proto.Field1Current = _data.current;
    return _proto;
  }

  public static WealthData Deserialize(global::Schema.Ragan.WealthData _proto)
  {
    WealthData _data;
    _data.current = _proto.Field1Current;
    return _data;
  }
}

}
